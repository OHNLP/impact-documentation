{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8123",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Project Controller",
      "description": "Operations relating to Project Creation and Management"
    },
    {
      "name": "Cohort Controller",
      "description": "Cohort and Evidence Related Methods, Including Results and Evidence Judgements"
    },
    {
      "name": "Job Controller",
      "description": "Operations relating to Job Creation, Management, and Status"
    }
  ],
  "paths": {
    "/_projects/create": {
      "put": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Creates a new project with the given name with the calling user set to owner",
        "operationId": "createProject",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/_projects/roles": {
      "post": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Sets the given project authority/role grant",
        "operationId": "setUserRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_projects/rename": {
      "post": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Renames the project associated with the given project UID to the given name",
        "operationId": "renameProject",
        "parameters": [
          {
            "name": "project_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/_projects/data_sources": {
      "get": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Gets a listing of data sources currently used for a given project UID",
        "operationId": "getDataSources",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceInformation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Updates list of data sources associated with a given project",
        "operationId": "writeDataSources",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DataSourceInformation"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_projects/criterion": {
      "get": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Gets the current (latest) revision of a criterion associated with a given project UID. ",
        "description": "Note that for jobs, the associated method under /_cohorts should be called instead using job UID as a parameter as the criterion associated with a prior job may be different from the latest revision",
        "operationId": "getProjectCriterion",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EntityCriterion"
                    },
                    {
                      "$ref": "#/components/schemas/LogicalCriterion"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Updates the criterion associated with a given project UID",
        "operationId": "writeProjectCriterion",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EntityCriterion"
                  },
                  {
                    "$ref": "#/components/schemas/LogicalCriterion"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_jobs/create": {
      "post": {
        "tags": [
          "Job Controller"
        ],
        "summary": "Queues a new job for the given project UID",
        "operationId": "createJob",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          }
        }
      }
    },
    "/_jobs/cancel": {
      "post": {
        "tags": [
          "Job Controller"
        ],
        "summary": "Cancels the job associated with the given job UID",
        "operationId": "cancelJob",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/relevance": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Gets current inclusion status for the given job and list of candidate patient UIDs",
        "operationId": "getCohortRelevance",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "patient_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "UNJUDGED",
                      "INCLUDE",
                      "EXCLUDE"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Writes current inclusion status for the given job and candidate patient UID",
        "operationId": "writeCohortRelevance",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "patient_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "judgement",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "UNJUDGED",
                "INCLUDE",
                "EXCLUDE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/evidence_relevance": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Gets match judgement (if present), or algorithmicly determined judgement for a given list of evidence UIDs associated with a given job and criterion (node) UID",
        "operationId": "getEvidenceRelevance",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "node_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "evidence_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "JUDGED_MATCH",
                      "JUDGED_MISMATCH",
                      "EVIDENCE_FOUND",
                      "EVIDENCE_FOUND_NLP",
                      "NO_EVIDENCE_FOUND",
                      "UNJUDGED"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Writes match judgement for a given evidence UID associated with a given job and criterion (node) UID",
        "operationId": "writeEvidenceRelevance",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "node_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "evidence_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "judgement",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "JUDGED_MATCH",
                "JUDGED_MISMATCH",
                "EVIDENCE_FOUND",
                "EVIDENCE_FOUND_NLP",
                "NO_EVIDENCE_FOUND",
                "UNJUDGED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/criterion_match_status": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Gets match judgement (if present), or algorithmicly determined judgement for all nodes of the Criterion associated with the given job UID",
        "operationId": "getCriterionMatchStatus",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "person_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CriterionInfo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Writes criterion match judgement for the given job, person, and criterion (node) UID",
        "operationId": "setCriterionMatchStatus",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "node_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "person_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriterionInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CriterionInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_projects/available_data_sources": {
      "get": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Gets a listing of available data sources",
        "operationId": "getAvailableDataSources",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceInformation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_projects/": {
      "get": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Gets listing of projects to which the calling user has read access",
        "operationId": "getProjectList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_jobs/user": {
      "get": {
        "tags": [
          "Job Controller"
        ],
        "summary": "Gets a listing of jobs associated to the calling user, sorted by date in descending order",
        "operationId": "getJobsForUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_jobs/project": {
      "get": {
        "tags": [
          "Job Controller"
        ],
        "summary": "Gets a listing of jobs associated with the given project UID, sorted by date in descending order",
        "operationId": "getJobsByProject",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_jobs/data_sources": {
      "get": {
        "tags": [
          "Job Controller"
        ],
        "summary": "Gets a listing of data sources currently used for a given job UID",
        "operationId": "getDataSources_1",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceInformation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/node_evidence": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Get a Listing of Evidence for a given Job/Patient on a Specific Criterion (node) UID",
        "operationId": "getEvidenceForNode",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "node_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "person_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evidence"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/evidencebyuid": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Gets the FHIR resources associated with a given set of evidence UIDs",
        "operationId": "getEvidenceByUID",
        "parameters": [
          {
            "name": "evidenceUID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JsonNode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/criterion": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Gets the revision of a criterion associated with a given job UID. ",
        "description": "Note that for projects, the associated method under /_projects should be called instead using project UID as a parameter as the criterion associated with a prior job may be different from the latest revision being edited",
        "operationId": "getJobCriterion",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EntityCriterion"
                    },
                    {
                      "$ref": "#/components/schemas/LogicalCriterion"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/_cohorts/": {
      "get": {
        "tags": [
          "Cohort Controller"
        ],
        "summary": "Get a Listing of Cohort Candidate by Job UID",
        "operationId": "getRetrievedCohort",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CohortCandidate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_projects/archive": {
      "delete": {
        "tags": [
          "Project Controller"
        ],
        "summary": "Archives the project associated with the given project UID",
        "operationId": "archiveProject",
        "parameters": [
          {
            "name": "project_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/_jobs/": {
      "delete": {
        "tags": [
          "Job Controller"
        ],
        "summary": "Archives the job associated with the given job UID",
        "operationId": "archiveJob",
        "parameters": [
          {
            "name": "job_uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProjectRole": {
        "type": "object",
        "properties": {
          "userUID": {
            "type": "string"
          },
          "projectUID": {
            "type": "string",
            "format": "uuid"
          },
          "grant": {
            "type": "string",
            "enum": [
              "ADMIN",
              "WRITE",
              "EXECUTE",
              "JUDGE",
              "READ"
            ]
          }
        }
      },
      "DataSourceInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "backendID": {
            "type": "string"
          }
        }
      },
      "Criterion": {
        "type": "object",
        "properties": {
          "nodeUID": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "nodeType": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "nodeType"
        }
      },
      "EntityCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Criterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "PERSON",
                  "CONDITION",
                  "PROCEDURE",
                  "MEDICATION",
                  "OBSERVATION"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityValue"
                }
              }
            }
          }
        ]
      },
      "EntityValue": {
        "type": "object",
        "properties": {
          "valuePath": {
            "type": "string",
            "enum": [
              "PERSON_ID",
              "PERSON_GENDER",
              "PERSON_DOB",
              "CONDITION_CODE",
              "PROCEDURE_CODE",
              "MEDICATION_CODE",
              "OBSERVATION_CODE",
              "OBSERVATION_VALUE"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reln": {
            "type": "string",
            "enum": [
              "LT",
              "LTE",
              "GT",
              "GTE",
              "EQ",
              "RANGE",
              "IN",
              "BETWEEN"
            ]
          },
          "expandedCodes": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "LogicalCriterion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Criterion"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "AND",
                  "MIN_OR",
                  "MAX_OR",
                  "NOT"
                ]
              },
              "numericModifier": {
                "type": "integer",
                "format": "int32"
              },
              "children": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Criterion"
                }
              }
            }
          }
        ]
      },
      "Job": {
        "type": "object",
        "properties": {
          "projectUID": {
            "type": "string",
            "format": "uuid"
          },
          "jobUID": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "PREFLIGHT",
              "IN_PROGRESS",
              "COMPLETE",
              "ERROR",
              "CANCELED"
            ]
          }
        }
      },
      "CriterionInfo": {
        "type": "object",
        "properties": {
          "judgement": {
            "type": "string",
            "enum": [
              "JUDGED_MATCH",
              "JUDGED_MISMATCH",
              "EVIDENCE_FOUND",
              "EVIDENCE_FOUND_NLP",
              "NO_EVIDENCE_FOUND",
              "UNJUDGED"
            ]
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "Evidence": {
        "type": "object",
        "properties": {
          "evidenceUID": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "CohortCandidate": {
        "type": "object",
        "properties": {
          "patUID": {
            "type": "string"
          },
          "inclusion": {
            "type": "string",
            "enum": [
              "UNJUDGED",
              "INCLUDE",
              "EXCLUDE"
            ]
          }
        }
      }
    }
  }
}
